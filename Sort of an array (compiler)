import java.util.Scanner;

public class Main {

    // Partition function to place pivot at correct position
    private static int partition(int[] nums, int low, int high) {
        int pivot = nums[high]; // Choosing the last element as pivot
        int i = low - 1; // Index of smaller element

        for (int j = low; j < high; j++) {
            if (nums[j] <= pivot) {
                i++;
                // Swap nums[i] and nums[j]
                int temp = nums[i];
                nums[i] = nums[j];
                nums[j] = temp;
            }
        }
        // Swap nums[i+1] and nums[high] (or pivot)
        int temp = nums[i + 1];
        nums[i + 1] = nums[high];
        nums[high] = temp;

        return i + 1;
    }

    // Quick Sort function
    private static void quickSort(int[] nums, int low, int high) {
        if (low < high) {
            int pi = partition(nums, low, high);

            // Recursively sort elements before and after partition
            quickSort(nums, low, pi - 1);
            quickSort(nums, pi + 1, high);
        }
    }

    // Main function to sort the array
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Prompt user for input
        System.out.print("Enter the number of elements: ");
        int n = scanner.nextInt();

        int[] nums = new int[n];
        System.out.println("Enter the elements:");
        for (int i = 0; i < n; i++) {
            nums[i] = scanner.nextInt();
        }

        // Sort the array using Quick Sort
        quickSort(nums, 0, nums.length - 1);

        // Print the sorted array
        System.out.println("Sorted array:");
        for (int num : nums) {
            System.out.print(num + " ");
        }
        scanner.close();
    }
}



